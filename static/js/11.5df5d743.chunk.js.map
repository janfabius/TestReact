{"version":3,"sources":["components/Page.js","components/Filter/DateRange.js","pages/BasePage.js","utils/formatDate.js","components/Filter/Affiliate.js","utils/colors.js","components/Filter/Product.js","pages/ProductSalePage.js"],"names":["bem","bn","create","Page","_ref","title","breadcrumbs","Tag","tag","className","children","restProps","Object","C_Users_Direcas_Documents_REACT_direcas_team_panel_direcas_cloud_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","type","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","defaultProps","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","DateRange","props","md","for","id","placeholder","defaultValue","fromStartDate","onChange","event","target","value","toStartDate","BasePage","isMobile","document","querySelector","classList","toggle","React","Component","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","react_select_async__WEBPACK_IMPORTED_MODULE_4__","_api__WEBPACK_IMPORTED_MODULE_5__","Affiliate","isClearable","cacheOptions","loadOptions","inputValue","url","concat","api","get","then","response","data","affiliate","label","attributes","catch","err","console","log","defaultOptions","handleChangeAffiliate","__webpack_exports__","getColor","availableColor","arguments","undefined","window","getComputedStyle","documentElement","getPropertyValue","Product","_useState","useState","_useState2","C_Users_Direcas_Documents_REACT_direcas_team_panel_direcas_cloud_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","groupId","setGroupId","_useState3","_useState4","departmentId","setDepartmentId","react_select_async__WEBPACK_IMPORTED_MODULE_6__","group","description","handleChangeGroup","customer","code","handleChangeDepartment","chartOptions","C_Users_Direcas_Documents_REACT_direcas_team_panel_direcas_cloud_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","BAR_CHART_OPTIONS","ProductSalePage","state","filters","from","to","product_group_id","product_department_id","product_id","quantity","groupBy","groupByRelation","groupByFilterName","searchClicked","touched","handleFilterChange","_this","setState","changeGroupBy","handleSubmit","onLoadStats","handleDetailClick","current","_this$state","handleReset","keys","forEach","_this2","this","content","charts","_this$state2","_this$props","products","loading","error","stats","chartMarginData","labels","datasets","borderColor","backgroundColor","chartProfitData","react__WEBPACK_IMPORTED_MODULE_6___default","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","color","ids","productIds","productIdsLenght","count","quantityTotal","amountTotal","profitTotal","promoAmountTotal","means","margins","promos","detailButton","push","reactstrap__WEBPACK_IMPORTED_MODULE_14__","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","responsive","productId","relationships","amount","mean","profit","margin","promo_amount","promo_perc","toFixed","arraySum","product","react_number_format__WEBPACK_IMPORTED_MODULE_28__","displayType","thousandSeparator","decimalSeparator","decimalScale","fixedDecimalScale","renderText","sm","react_chartjs_2__WEBPACK_IMPORTED_MODULE_20__","options","components_Page__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_19__","onSubmit","_components_Filter_DateRange__WEBPACK_IMPORTED_MODULE_25__","bind","_components_Filter_Product__WEBPACK_IMPORTED_MODULE_26__","_components_Filter_Affiliate__WEBPACK_IMPORTED_MODULE_27__","disabled","react_notification_system_redux__WEBPACK_IMPORTED_MODULE_21___default","dismissible","notifications","style","NOTIFICATION_SYSTEM_STYLE","contextTypes","store","PropTypes","object","propTypes","array","affiliates","groups","departments","families","bool","pdfAvaiable","connect","statistics","productTotalStatistics","failies","dispatch","page","perPage","include","order","actions"],"mappings":"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","file":"static/js/11.5df5d743.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import React from 'react';\n\nimport { Col, Row, FormGroup, Label, Input } from 'reactstrap';\n\nconst DateRange = (props) => {\n    return (\n        <Row>\n            <Col md={6}>\n                <FormGroup>\n                    <Label for=\"from\">Da</Label>\n                    <Input\n                        type=\"date\"\n                        name=\"from\"\n                        id=\"from\"\n                        placeholder=\"Data inizio\"\n                        defaultValue={props.fromStartDate}\n                        onChange={(event) => props.onChange(event.target.value, 'from')}\n                    />\n                </FormGroup>\n            </Col>\n            <Col md={6}>\n                <FormGroup>\n                    <Label for=\"exampleDate\">A</Label>\n                    <Input\n                        type=\"date\"\n                        name=\"date\"\n                        id=\"to\"\n                        placeholder=\"Data Fine\"\n                        defaultValue={props.toStartDate}\n                        onChange={(event) => props.onChange(event.target.value, 'to')}\n                    />\n                </FormGroup>\n            </Col>\n        </Row>\n    );\n};\n\nexport default DateRange;\n","import React from 'react';\n\nimport { isMobile } from \"react-device-detect\";\n\nclass BasePage extends React.Component {\n\tcomponentDidMount() {\n\t\tif (isMobile) {\n\t\t\tdocument.querySelector('.cr-sidebar').classList.toggle('cr-sidebar--open');\n\t\t}\n\t}\n}\n\nexport default BasePage","export const formatDate = (date) => {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear()\n\n  if (month.length < 2)\n      month = '0' + month;\n  if (day.length < 2)\n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nexport default formatDate\n","import React from 'react';\n\nimport { Col, FormGroup, Label } from 'reactstrap';\nimport AsyncSelect from 'react-select/async';\n\nimport api from '../../api'\n\n\nconst Affiliate = (props) => {\n    const promiseAffilialeOptions = inputValue => {\n        const url = `affiliates${inputValue ? '?filter[text]=' + inputValue : ''}`\n        return api.get(url)\n            .then(response => {\n                let options = response.data.data.map(affiliate => ({ value: affiliate.id, label: affiliate.attributes.name }));\n                return options;\n            })\n            .catch(err => {\n                console.log('some error', err);\n            });\n    };\n\n    const handleChangeAffiliate = (event) => {\n        const value = event ? event.value : null\n        props.onChange(value, 'affiliate_id')\n    }\n\n    return (\n        <Col md={6}>\n            <FormGroup>\n                <Label for=\"exampleUrl\">Filiale</Label>\n                <AsyncSelect\n                    isClearable\n                    cacheOptions\n                    loadOptions={promiseAffilialeOptions}\n                    defaultOptions\n                    onChange={(event) => handleChangeAffiliate(event)}\n                />\n            </FormGroup>\n        </Col>\n    );\n};\n\nexport default Affiliate;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import React, { useState } from 'react';\n\nimport { Col, Row, FormGroup, Label } from 'reactstrap';\nimport AsyncSelect from 'react-select/async';\n\nimport api from '../../api'\n\n\nconst Product = (props) => {\n    const [groupId, setGroupId] = useState(\n        null\n    );\n\n    const [departmentId, setDepartmentId] = useState(\n        null\n    );\n\n    const promiseProductGroupOptions = inputValue => {\n        const url = `product-groups${inputValue ? '?filter[text]=' + inputValue : ''}`\n        return api.get(url)\n            .then(response => {\n                const options = response.data.data.map(group => ({ value: group.id, label: group.attributes.description }));\n                return options;\n            })\n            .catch(err => {\n                console.log('some error', err);\n            });\n    };\n\n    const promiseProductDepartmentOptions = inputValue => {\n        const url = `product-departments${inputValue ? '?filter[text]=' + inputValue : ''}${groupId ? '&filter[group_id]=' + groupId : ''}`\n        return api.get(url)\n            .then(response => {\n                const options = response.data.data.map(customer => ({ value: customer.attributes.code, label: customer.attributes.description }));\n                return options;\n            })\n            .catch(err => {\n                console.log('some error', err);\n            });\n    };\n\n    const promiseProductOptions = inputValue => {\n        if (inputValue.length > 3) {\n            const url = `products${inputValue ? '?filter[text]=' + inputValue : ''}${groupId ? '&filter[group_id]=' + groupId : ''}${departmentId ? '&filter[department_id]=' + departmentId : ''}`\n            return api.get(url)\n                .then(response => {\n                    const options = response.data.data.map(customer => ({ value: customer.id, label: customer.attributes.description }));\n                    return options;\n                })\n                .catch(err => {\n                    console.log('some error', err);\n                });\n        }\n    };\n\n    const handleChangeGroup = (event) => {\n        const value = event ? event.value : null\n        props.onChange(value, 'product_group_id')\n        setGroupId(value)\n    }\n\n    const handleChangeDepartment = (event) => {\n        const value = event ? event.value : null\n        props.onChange(value, 'product_department_id')\n        setDepartmentId(value)\n    }\n    return (\n        <Row>\n            <Col md={4}>\n                <FormGroup>\n                    <Label for=\"exampleUrl\">Gruppo Prodotto</Label>\n                    <AsyncSelect\n                        isClearable\n                        cacheOptions\n                        loadOptions={promiseProductGroupOptions}\n                        defaultOptions\n                        onChange={(event) => handleChangeGroup(event)}\n                    />\n                </FormGroup>\n            </Col>\n            <Col md={4}>\n                <FormGroup>\n                    <Label for=\"exampleUrl\">Reparto prodotto</Label>\n                    <AsyncSelect\n                        isClearable\n                        loadOptions={promiseProductDepartmentOptions}\n                        defaultOptions\n                        onChange={(event) => handleChangeDepartment(event)}\n                    />\n                </FormGroup>\n            </Col>\n            <Col md={4}>\n                <FormGroup>\n                    <Label for=\"exampleUrl\">Prodotto</Label>\n                    <AsyncSelect\n                        isClearable\n                        loadOptions={promiseProductOptions}\n                        defaultOptions\n                        onChange={(event) => props.onChange(event.value, 'product_id')}\n                    />\n                </FormGroup>\n            </Col>\n        </Row>\n    );\n};\n\nexport default Product;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../store/actions/index';\nimport Page from 'components/Page';\nimport { Card, CardHeader, CardBody, Row, Col, Form, Button, Spinner, Table } from 'reactstrap';\nimport { Bar } from 'react-chartjs-2';\n\nimport NotificationSystem from 'react-notification-system-redux';\nimport { NOTIFICATION_SYSTEM_STYLE, BAR_CHART_OPTIONS } from 'utils/constants';\nimport arraySum from '../utils/arraySum'\nimport { getColor } from 'utils/colors';\nimport DateRange from '../components/Filter/DateRange'\nimport ProductFilter from '../components/Filter/Product'\nimport AffiliateFilter from '../components/Filter/Affiliate'\nimport NumberFormat from 'react-number-format';\nimport formatDate from '../utils/formatDate'\nimport BasePage from './BasePage';\n\nconst initChartMarginDataset = () => {\n    return [\n        {\n            label: 'Margine',\n            borderColor: getColor('primary'),\n            backgroundColor: getColor('primary'),\n            data: [],\n        }\n    ]\n}\n\nconst initChartProfitDataset = () => {\n    return [\n        {\n            label: 'Profitto',\n            borderColor: getColor('secondary'),\n            backgroundColor: getColor('secondary'),\n            data: [],\n        }\n    ]\n}\n\nconst chartOptions = () => {\n    return {\n        ...BAR_CHART_OPTIONS\n    }\n}\n\nconst date = new Date()\n\nclass ProductSalePage extends BasePage {\n\n    state = {\n        filters: {\n            from: formatDate(new Date(date.getFullYear(), date.getMonth(), 1)),\n            to: formatDate(new Date()),\n            product_group_id: null,\n            product_department_id: null,\n            product_id: null,\n            quantity: 0,\n        },\n        groupBy: \"groups\",\n        groupByRelation: \"group\",\n        groupByFilterName: \"product_group_id\",\n        searchClicked: false,\n        touched: false\n    }\n\n    handleFilterChange = (value, name) => {\n        const { filters } = this.state\n        filters[name] = value\n        this.setState({\n            filters\n        })\n        if (value === null) {\n            switch (name) {\n                case \"product_group_id\":\n                    this.changeGroupBy(\"\")\n                    break;\n                case \"product_department_id\":\n                    this.changeGroupBy(\"groups\")\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    handleSubmit = () => {\n        const { searchClicked } = this.state\n        this.setState({\n            searchClicked: !searchClicked,\n            touched: true\n        })\n        this.props.onLoadStats(null, null, this.state.filters, ['affiliate', 'product', 'group', 'department'], null)\n    }\n\n    handleDetailClick = (value, name, current) => {\n        this.handleFilterChange(value, name)\n        this.handleSubmit()\n        this.changeGroupBy(current)\n    }\n\n    changeGroupBy = (value) => {\n        let { groupBy, groupByRelation, groupByFilterName } = this.state\n        switch (value) {\n            case \"groups\":\n                groupBy = \"departments\"\n                groupByRelation = \"department\"\n                groupByFilterName = \"product_department_id\"\n                break;\n            case \"departments\":\n                groupBy = \"families\"\n                groupByRelation = \"family\"\n                groupByFilterName = null\n                break;\n            default:\n                groupBy = \"groups\"\n                groupByRelation = \"group\"\n                groupByFilterName = \"product_group_id\"\n                break;\n        }\n        this.setState({\n            groupBy,\n            groupByRelation,\n            groupByFilterName\n        })\n    }\n\n    handleReset = () => {\n        const { filters } = this.state\n        const names = Object.keys(filters)\n        names.forEach(name => {\n            filters[name] = null\n        })\n        this.setState({\n            filters\n        })\n        this.changeGroupBy(\"\")\n    }\n\n    render() {\n        let content = null\n        let charts = null\n        const { groupBy, groupByRelation, groupByFilterName, searchClicked, touched } = this.state\n        const { products, loading, error, stats } = this.props\n        let chartMarginData = {\n            labels: [],\n            datasets: initChartMarginDataset()\n        }\n        let chartProfitData = {\n            labels: [],\n            datasets: initChartProfitDataset()\n        }\n        if (loading && searchClicked) {\n            content = <Card><CardBody><Spinner color=\"primary\" /></CardBody></Card>\n            charts = <Card><CardBody><Spinner color=\"primary\" /></CardBody></Card>\n        }\n        if (loading === false && error === false && stats !== null && touched === true) {\n            const ids = this.props[groupBy] ? Object.keys(this.props[groupBy]) : []\n            const productIds = Object.keys(stats)\n            const   productIdsLenght = productIds.length\n            content = ids.map((id) => {\n                let count = 0\n                let quantityTotal = 0\n                let amountTotal = 0\n                let profitTotal = 0\n                let promoAmountTotal = 0\n                let means = []\n                let margins = []\n                let promos = []\n                let detailButton = null\n                chartMarginData.labels.push(this.props[groupBy][id].description)\n                chartProfitData.labels.push(this.props[groupBy][id].description)\n                if (groupByFilterName) {\n                    detailButton = <Button\n                        color=\"secondary\"\n                        onClick={() => this.handleDetailClick(id, groupByFilterName, groupBy)}>Visualizza dettagli\n                    </Button>\n                }\n                return <Row key={id}>\n                    <Col>\n                        <Card>\n                            <CardHeader className=\"bg-primary text-white\">\n                                <div className=\"d-flex justify-content-between align-items-center\">\n                                    <span>{this.props[groupBy][id].description}</span>\n                                    {detailButton}\n                                </div>\n                            </CardHeader>\n                            <CardBody>\n                                <Table responsive>\n                                    <thead>\n                                        <tr>\n                                            <th className=\"text-left\">Prodotto</th>\n                                            <th className=\"text-right\">Quantit&agrave;</th>\n                                            <th className=\"text-right\">Medio €</th>\n                                            <th className=\"text-right\">Valore €</th>\n                                            <th className=\"text-right\">Utile €</th>\n                                            <th className=\"text-right\">Margine %</th>\n                                            <th className=\"text-right\">Offerte ½</th>\n                                            <th className=\"text-right\">Offerte %</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n\n                                            productIds.map((productId,index) => {\n                                                if (stats[productId].relationships[groupByRelation].data && stats[productId].relationships[groupByRelation].data.id === id) {\n                                                    count++\n                                                    quantityTotal += stats[productId].attributes.quantity\n                                                    amountTotal += stats[productId].attributes.amount\n                                                    means.push(stats[productId].attributes.mean)\n                                                    profitTotal += stats[productId].attributes.profit\n                                                    margins.push(stats[productId].attributes.margin)\n                                                    promoAmountTotal += stats[productId].attributes.promo_amount\n                                                    promos.push(stats[productId].attributes.promo_perc)\n                                                    if(productIdsLenght === index +1){\n                                                      chartProfitData.datasets[0].data.push(profitTotal.toFixed(2))\n                                                      chartMarginData.datasets[0].data.push((arraySum(margins) / margins.length).toFixed(2))\n                                                    }\n\n                                                    return <tr key={productId}>\n                                                        <td className=\"text-left\">{products[stats[productId].relationships.product.data.id].description}</td>\n                                                        <td className=\"text-right\">{stats[productId].attributes.quantity}</td>\n                                                        <td className=\"text-right\"><NumberFormat value={stats[productId].attributes.mean} displayType={'text'} thousandSeparator={'.'} decimalSeparator={','} decimalScale={2} fixedDecimalScale={true} renderText={value => <div>{value}</div>} /></td>\n                                                        <td className=\"text-right\"><NumberFormat value={stats[productId].attributes.amount} displayType={'text'} thousandSeparator={'.'} decimalSeparator={','} decimalScale={2} fixedDecimalScale={true} renderText={value => <div>{value}</div>} /></td>\n                                                        <td className=\"text-right\"><NumberFormat value={stats[productId].attributes.profit} displayType={'text'} thousandSeparator={'.'} decimalSeparator={','} decimalScale={2} fixedDecimalScale={true} renderText={value => <div>{value}</div>} /></td>\n                                                        <td className=\"text-right\">{stats[productId].attributes.margin.toFixed(2)}</td>\n                                                        <td className=\"text-right\"><NumberFormat value={stats[productId].attributes.promo_amount} displayType={'text'} thousandSeparator={'.'} decimalSeparator={','} decimalScale={2} fixedDecimalScale={true} renderText={value => <div>{value}</div>} /></td>\n                                                        <td className=\"text-right\">{stats[productId].attributes.promo_perc.toFixed(2)}</td>\n                                                    </tr>\n                                                }\n                                                return null\n                                            })\n                                        }\n                                    </tbody>\n                                    <tfoot>\n                                        <tr>\n                                            <th>TOTALI: {count}</th>\n                                            <td className=\"text-right\">{quantityTotal}</td>\n                                            <td className=\"text-right\"><NumberFormat value={arraySum(means)} displayType={'text'} thousandSeparator={'.'} decimalSeparator={','} decimalScale={2} fixedDecimalScale={true} renderText={value => <div>{value}</div>} /></td>\n                                            <td className=\"text-right\"><NumberFormat value={amountTotal} displayType={'text'} thousandSeparator={'.'} decimalSeparator={','} decimalScale={2} fixedDecimalScale={true} renderText={value => <div>{value}</div>} /></td>\n                                            <td className=\"text-right\"><NumberFormat value={profitTotal} displayType={'text'} thousandSeparator={'.'} decimalSeparator={','} decimalScale={2} fixedDecimalScale={true} renderText={value => <div>{value}</div>} /></td>\n                                            <td className=\"text-right\">{(arraySum(margins) / margins.length).toFixed(2)}</td>\n                                            <td className=\"text-right\">{promoAmountTotal.toFixed(2)}</td>\n                                            <td className=\"text-right\">{(arraySum(promos) / promos.length).toFixed(2)}</td>\n                                        </tr>\n                                    </tfoot>\n                                </Table>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            })\n            charts = <Row>\n                <Col sm={6}>\n                    <Card>\n                        <CardHeader>Profitto</CardHeader>\n                        <CardBody>\n                            <Bar data={chartProfitData} options={chartOptions()} />\n                        </CardBody>\n                    </Card>\n                </Col>\n                <Col sm={6}>\n                    <Card>\n                        <CardHeader>Margine</CardHeader>\n                        <CardBody>\n                            <Bar data={chartMarginData} options={chartOptions()} />\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        }\n        return (\n            <Page title=\"Vendite prodotti\" breadcrumbs={[{ name: 'vendite prodotti', active: true }]}>\n                <Row>\n                    <Col>\n                        <Card className=\"mb-3\">\n                            <CardHeader>\n                                Filtri\n                            </CardHeader>\n                            <CardBody>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <DateRange onChange={this.handleFilterChange.bind(this)} fromStartDate={this.state.filters.from} toStartDate={this.state.filters.to} />\n                                    <ProductFilter onChange={this.handleFilterChange.bind(this)} />\n                                    <Row>\n                                        <AffiliateFilter onChange={this.handleFilterChange.bind(this)} />\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Button\n                                                color=\"primary\"\n                                                disabled={this.props.loading && this.state.searchClicked}\n                                                onClick={this.handleSubmit}>\n                                                Cerca\n                                            </Button>&nbsp;\n                                            <Button\n                                                color=\"secondary\"\n                                                disabled={this.props.loading && this.state.searchClicked}\n                                                onClick={this.handleReset}>\n                                                Reset\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                        { charts }\n                        { content }\n                    </Col>\n                </Row>\n                <NotificationSystem\n                    dismissible={false}\n                    notifications={this.props.notifications}\n                    style={NOTIFICATION_SYSTEM_STYLE}\n                />\n            </Page>\n        )\n    }\n}\n\nProductSalePage.contextTypes = {\n    store: PropTypes.object\n};\n\nProductSalePage.propTypes = {\n    notifications: PropTypes.array,\n    stats: PropTypes.object,\n    affiliates: PropTypes.object,\n    products: PropTypes.object,\n    groups: PropTypes.object,\n    departments: PropTypes.object,\n    families: PropTypes.object,\n    loading: PropTypes.bool,\n    error: PropTypes.bool,\n    pdfAvaiable: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    return {\n        stats: state.statistics.productTotalStatistics,\n        affiliates: state.statistics.affiliates,\n        products: state.statistics.products,\n        groups: state.statistics.groups,\n        departments: state.statistics.departments,\n        failies: state.statistics.families,\n        loading: state.statistics.loading,\n        error: state.statistics.error,\n        pdfAvaiable: state.statistics.pdfAvaiable,\n        notifications: state.notifications,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLoadStats: (page, perPage, filters, include, order) => dispatch(actions.loadProductTotalStat(page, perPage, filters, include, order)),\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductSalePage);\n"],"sourceRoot":""}