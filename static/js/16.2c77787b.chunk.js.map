{"version":3,"sources":["components/Page.js","components/Filter/DateRange.js","pages/BasePage.js","components/RowNoData.js","utils/formatDate.js","components/Filter/Affiliate.js","pages/CancelledSalePage.js"],"names":["bem","bn","create","Page","_ref","title","breadcrumbs","Tag","tag","className","children","restProps","Object","C_Users_Direcas_Documents_REACT_direcas_team_panel_direcas_cloud_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","type","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","defaultProps","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","DateRange","props","md","for","id","placeholder","defaultValue","fromStartDate","onChange","event","target","value","toStartDate","BasePage","isMobile","document","querySelector","classList","toggle","React","Component","RowNoData","colSpan","colspan","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","react_select_async__WEBPACK_IMPORTED_MODULE_4__","_api__WEBPACK_IMPORTED_MODULE_5__","Affiliate","isClearable","cacheOptions","loadOptions","inputValue","url","concat","api","get","then","response","data","affiliate","label","attributes","catch","err","console","log","defaultOptions","handleChangeAffiliate","CancelledSalePage","state","filters","affiliate_number","from","to","touched","handleSubmit","searchClicked","_this","setState","onLoadStats","handleFilterChange","_this2","this","sumTotal","rows","react__WEBPACK_IMPORTED_MODULE_7___default","_components_RowNoData__WEBPACK_IMPORTED_MODULE_22__","_this$props","stats","loading","error","affiliates","doc","import","cash_desk_number","operator_code","room","table","components_Page__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","onSubmit","_components_Filter_DateRange__WEBPACK_IMPORTED_MODULE_18__","bind","_components_Filter_Affiliate__WEBPACK_IMPORTED_MODULE_19__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","color","disabled","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_16__","responsive","toFixed","react_notification_system__WEBPACK_IMPORTED_MODULE_20___default","dismissible","ref","notificationSystem","style","NOTIFICATION_SYSTEM_STYLE","contextTypes","store","PropTypes","object","propTypes","notifications","array","bool","pdfAvaiable","connect","statistics","cancelledSaleStatistics","dispatch","page","perPage","include","order","actions"],"mappings":"iKASMA,EAAMC,IAAGC,OAAO,QAEhBC,EAAO,SAAAC,GAOP,IANJC,EAMID,EANJC,MACAC,EAKIF,EALJE,YACKC,EAIDH,EAJJI,IACAC,EAGIL,EAHJK,UACAC,EAEIN,EAFJM,SACGC,EACCC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,sDACEU,EAAUd,EAAIe,EAAE,OAAQN,GAE9B,OACEO,EAAAC,EAAAC,cAACX,EAADK,OAAAO,OAAA,CAAKV,UAAWK,GAAaH,GAC3BK,EAAAC,EAAAC,cAAA,OAAKT,UAAWT,EAAIoB,EAAE,WACnBf,GAA0B,kBAAVA,EACfW,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYC,KAAK,KAAKb,UAAWT,EAAIoB,EAAE,UACpCf,GAGDA,EAEHC,GACCU,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYd,UAAWT,EAAIoB,EAAE,eAC3BJ,EAAAC,EAAAC,cAACM,EAAA,EAAD,aACClB,EAAYmB,QACXnB,EAAYoB,IAAI,SAAAC,EAAmBC,GAAnB,IAAGC,EAAHF,EAAGE,KAAMC,EAATH,EAASG,OAAT,OACdd,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAgBO,IAAKH,EAAOE,OAAQA,GACjCD,OAMZnB,IAkBPP,EAAK6B,aAAe,CAClBxB,IAAK,MACLH,MAAO,IAGMF,wCClEf,IAAA8B,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAX,EAAAW,EAAA,KAAAV,EAAAU,EAAA,KAqCeM,IAjCG,SAACC,GACf,OACIN,EAAAlB,EAAAC,cAACmB,EAAA,EAAD,KACIF,EAAAlB,EAAAC,cAACoB,EAAA,EAAD,CAAKI,GAAI,GACLP,EAAAlB,EAAAC,cAACqB,EAAA,EAAD,KACIJ,EAAAlB,EAAAC,cAACK,EAAA,EAAD,CAAOoB,IAAI,QAAX,MACAR,EAAAlB,EAAAC,cAACM,EAAA,EAAD,CACIF,KAAK,OACLO,KAAK,OACLe,GAAG,OACHC,YAAY,cACZC,aAAcL,EAAMM,cACpBC,SAAU,SAACC,GAAD,OAAWR,EAAMO,SAASC,EAAMC,OAAOC,MAAO,aAIpEhB,EAAAlB,EAAAC,cAACoB,EAAA,EAAD,CAAKI,GAAI,GACLP,EAAAlB,EAAAC,cAACqB,EAAA,EAAD,KACIJ,EAAAlB,EAAAC,cAACK,EAAA,EAAD,CAAOoB,IAAI,eAAX,KACAR,EAAAlB,EAAAC,cAACM,EAAA,EAAD,CACIF,KAAK,OACLO,KAAK,OACLe,GAAG,KACHC,YAAY,YACZC,aAAcL,EAAMW,YACpBJ,SAAU,SAACC,GAAD,OAAWR,EAAMO,SAASC,EAAMC,OAAOC,MAAO,oHCzB1EE,8LAEAC,YACHC,SAASC,cAAc,eAAeC,UAAUC,OAAO,2BAHnCC,IAAMC,WAQdP,wCCZf,IAAApB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAUe4B,IARG,SAACpB,GACf,OACIN,EAAAlB,EAAAC,cAAA,UACIiB,EAAAlB,EAAAC,cAAA,MAAI4C,QAASrB,EAAMsB,SAAUtB,EAAM/B,UAAY,4DCS5CsD,IAdW,SAACC,GACzB,IAAIC,EAAI,IAAIC,KAAKF,GACbG,EAAQ,IAAMF,EAAEG,WAAa,GAC7BC,EAAM,GAAKJ,EAAEK,UACbC,EAAON,EAAEO,cAOb,OALIL,EAAM3C,OAAS,IACf2C,EAAQ,IAAMA,GACdE,EAAI7C,OAAS,IACb6C,EAAM,IAAMA,GAET,CAACE,EAAMJ,EAAOE,GAAKI,KAAK,wCCXjC,IAAAzC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAyC,EAAAzC,EAAA,KAAA0C,EAAA1C,EAAA,IA0Ce2C,IAlCG,SAACpC,GAkBf,OACIN,EAAAlB,EAAAC,cAACmB,EAAA,EAAD,CAAKK,GAAI,GACLP,EAAAlB,EAAAC,cAACoB,EAAA,EAAD,KACIH,EAAAlB,EAAAC,cAACqB,EAAA,EAAD,CAAOI,IAAI,cAAX,WACAR,EAAAlB,EAAAC,cAACyD,EAAA,EAAD,CACIG,aAAW,EACXC,cAAY,EACZC,YAxBgB,SAAAC,GAC5B,IAAMC,EAAG,aAAAC,OAAgBF,EAAa,iBAAmBA,EAAa,IACtE,OAAOG,IAAIC,IAAIH,GACVI,KAAK,SAAAC,GAEF,OADcA,EAASC,KAAKA,KAAK9D,IAAI,SAAA+D,GAAS,MAAK,CAAEtC,MAAOsC,EAAU7C,GAAI8C,MAAOD,EAAUE,WAAW9D,UAGzG+D,MAAM,SAAAC,GACHC,QAAQC,IAAI,aAAcF,MAiBtBG,gBAAc,EACdhD,SAAU,SAACC,GAAD,OAdI,SAACA,GAC3B,IAAME,EAAQF,EAAQA,EAAME,MAAQ,KACpCV,EAAMO,SAASG,EAAO,gBAYW8C,CAAsBhD,qSCnB3DgB,EAAO,IAAIE,KAET+B,6MAEJC,MAAQ,CACNC,QAAS,CACPC,iBAAkB,KAClBC,KAAMtC,YAAW,IAAIG,KAAKF,EAAKQ,cAAeR,EAAKI,WAAY,IAC/DkC,GAAIvC,YAAW,IAAIG,OAErBqC,SAAS,KAGXC,aAAe,WAAM,IACXC,EAAkBC,EAAKR,MAAvBO,cACRC,EAAKC,SAAS,CACZF,eAAgBA,EAChBF,SAAS,IAEXG,EAAKlE,MAAMoE,YAAY,KAAM,KAAMF,EAAKR,MAAMC,QAAS,CAAC,aAAc,SAGxEU,mBAAqB,SAAC3D,EAAOtB,GAAS,IAC5BuE,EAAYO,EAAKR,MAAjBC,QACRA,EAAQvE,GAAQsB,EAChBwD,EAAKC,SAAS,CACZR,qFAIK,IAAAW,EAAAC,KACHC,EAAW,EACXC,EAAOC,EAAAlG,EAAAC,cAACkG,EAAA,EAAD,CAAWrD,QAAS,IACvByC,EAAYQ,KAAKb,MAAjBK,QAHDa,EAIuCL,KAAKvE,MAA3C6E,EAJDD,EAICC,MAAOC,EAJRF,EAIQE,QAASC,EAJjBH,EAIiBG,MAAOC,EAJxBJ,EAIwBI,WAe/B,OAdgB,IAAZF,IAA+B,IAAVC,GAA6B,OAAVF,IAA8B,IAAZd,IAC5DU,EAAOI,EAAM5F,IAAI,SAAAgG,GAEf,OADAT,GAAYS,EAAI/B,WAAWgC,OACpBR,EAAAlG,EAAAC,cAAA,UACLiG,EAAAlG,EAAAC,cAAA,UAAKuG,EAAWC,EAAI/B,WAAWU,kBAAkBxE,MACjDsF,EAAAlG,EAAAC,cAAA,UAAKwG,EAAI/B,WAAWiC,kBACpBT,EAAAlG,EAAAC,cAAA,UAAKwG,EAAI/B,WAAWkC,eACpBV,EAAAlG,EAAAC,cAAA,UAAKwG,EAAI/B,WAAWmC,MACpBX,EAAAlG,EAAAC,cAAA,UAAKwG,EAAI/B,WAAWoC,OACpBZ,EAAAlG,EAAAC,cAAA,UAAKwG,EAAI/B,WAAWgC,QACpBR,EAAAlG,EAAAC,cAAA,UAAKwG,EAAI/B,WAAW1B,UAKxBkD,EAAAlG,EAAAC,cAAC8G,EAAA,EAAD,CAAM3H,MAAM,sBAAsBC,YAAa,CAAC,CAAEuB,KAAM,sBAAuBC,QAAQ,KACrFqF,EAAAlG,EAAAC,cAAC+G,EAAA,EAAD,KACEd,EAAAlG,EAAAC,cAACgH,EAAA,EAAD,KACEf,EAAAlG,EAAAC,cAACiH,EAAA,EAAD,CAAM1H,UAAU,QACd0G,EAAAlG,EAAAC,cAACkH,EAAA,EAAD,eAGAjB,EAAAlG,EAAAC,cAACmH,EAAA,EAAD,KACElB,EAAAlG,EAAAC,cAACoH,EAAA,EAAD,CAAMC,SAAUvB,KAAKP,cACnBU,EAAAlG,EAAAC,cAACsH,EAAA,EAAD,CAAWxF,SAAUgE,KAAKF,mBAAmB2B,KAAKzB,MAAOjE,cAAeiE,KAAKb,MAAMC,QAAQE,KAAMlD,YAAa4D,KAAKb,MAAMC,QAAQG,KACjIY,EAAAlG,EAAAC,cAACwH,EAAA,EAAD,CAAiB1F,SAAUgE,KAAKF,mBAAmB2B,KAAKzB,QACxDG,EAAAlG,EAAAC,cAAC+G,EAAA,EAAD,KACEd,EAAAlG,EAAAC,cAACgH,EAAA,EAAD,KACEf,EAAAlG,EAAAC,cAACyH,EAAA,EAAD,CACEC,MAAM,UACNC,SAAU7B,KAAKvE,MAAM8E,SAAWP,KAAKb,MAAMO,cAC3CoC,QAAS9B,KAAKP,cAHhB,cAWVU,EAAAlG,EAAAC,cAACiH,EAAA,EAAD,CAAM1H,UAAU,QACd0G,EAAAlG,EAAAC,cAACmH,EAAA,EAAD,KACElB,EAAAlG,EAAAC,cAAC6H,EAAA,EAAD,CAAOC,YAAU,GACf7B,EAAAlG,EAAAC,cAAA,aACEiG,EAAAlG,EAAAC,cAAA,UACEiG,EAAAlG,EAAAC,cAAA,qBACAiG,EAAAlG,EAAAC,cAAA,mBACAiG,EAAAlG,EAAAC,cAAA,uBACAiG,EAAAlG,EAAAC,cAAA,kBACAiG,EAAAlG,EAAAC,cAAA,oBACAiG,EAAAlG,EAAAC,cAAA,oBACAiG,EAAAlG,EAAAC,cAAA,oBAGJiG,EAAAlG,EAAAC,cAAA,aACGgG,GAEHC,EAAAlG,EAAAC,cAAA,aACEiG,EAAAlG,EAAAC,cAAA,UACEiG,EAAAlG,EAAAC,cAAA,MAAI4C,QAAQ,KAAZ,WACAqD,EAAAlG,EAAAC,cAAA,UAAK+F,EAASgC,QAAQ,WAQpC9B,EAAAlG,EAAAC,cAACgI,EAAAjI,EAAD,CACEkI,aAAa,EACbC,IAAK,SAAAC,GAAkB,OACpBtC,EAAKsC,mBAAqBA,GAE7BC,MAAOC,cAzGelG,KAgHhC6C,EAAkBsD,aAAe,CAC/BC,MAAOC,IAAUC,QAGnBzD,EAAkB0D,UAAY,CAC5BC,cAAeH,IAAUI,MACzBxC,MAAOoC,IAAUI,MACjBrC,WAAYiC,IAAUC,OACtBpC,QAASmC,IAAUK,KACnBvC,MAAOkC,IAAUK,KACjBC,YAAaN,IAAUK,MAmBVE,4BAhBS,SAAA9D,GACtB,MAAO,CACLmB,MAAOnB,EAAM+D,WAAWC,wBACxB1C,WAAYtB,EAAM+D,WAAWzC,WAC7BF,QAASpB,EAAM+D,WAAW3C,QAC1BC,MAAOrB,EAAM+D,WAAW1C,MACxBwC,YAAa7D,EAAM+D,WAAWF,cAIP,SAAAI,GACzB,MAAO,CACLvD,YAAa,SAACwD,EAAMC,EAASlE,EAASmE,EAASC,GAAlC,OAA4CJ,EAASK,IAA8BJ,EAAMC,EAASlE,EAASmE,EAASC,OAItHP,CAA6C/D","file":"static/js/16.2c77787b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import React from 'react';\n\nimport { Col, Row, FormGroup, Label, Input } from 'reactstrap';\n\nconst DateRange = (props) => {\n    return (\n        <Row>\n            <Col md={6}>\n                <FormGroup>\n                    <Label for=\"from\">Da</Label>\n                    <Input\n                        type=\"date\"\n                        name=\"from\"\n                        id=\"from\"\n                        placeholder=\"Data inizio\"\n                        defaultValue={props.fromStartDate}\n                        onChange={(event) => props.onChange(event.target.value, 'from')}\n                    />\n                </FormGroup>\n            </Col>\n            <Col md={6}>\n                <FormGroup>\n                    <Label for=\"exampleDate\">A</Label>\n                    <Input\n                        type=\"date\"\n                        name=\"date\"\n                        id=\"to\"\n                        placeholder=\"Data Fine\"\n                        defaultValue={props.toStartDate}\n                        onChange={(event) => props.onChange(event.target.value, 'to')}\n                    />\n                </FormGroup>\n            </Col>\n        </Row>\n    );\n};\n\nexport default DateRange;\n","import React from 'react';\n\nimport { isMobile } from \"react-device-detect\";\n\nclass BasePage extends React.Component {\n\tcomponentDidMount() {\n\t\tif (isMobile) {\n\t\t\tdocument.querySelector('.cr-sidebar').classList.toggle('cr-sidebar--open');\n\t\t}\n\t}\n}\n\nexport default BasePage","import React from 'react';\n\nconst RowNoData = (props) => {\n    return (\n        <tr>\n            <td colSpan={props.colspan}>{props.children || \"Nessun dato presente\"}</td>\n        </tr>\n    );\n};\n\nexport default RowNoData;\n","export const formatDate = (date) => {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear()\n\n  if (month.length < 2)\n      month = '0' + month;\n  if (day.length < 2)\n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nexport default formatDate\n","import React from 'react';\n\nimport { Col, FormGroup, Label } from 'reactstrap';\nimport AsyncSelect from 'react-select/async';\n\nimport api from '../../api'\n\n\nconst Affiliate = (props) => {\n    const promiseAffilialeOptions = inputValue => {\n        const url = `affiliates${inputValue ? '?filter[text]=' + inputValue : ''}`\n        return api.get(url)\n            .then(response => {\n                let options = response.data.data.map(affiliate => ({ value: affiliate.id, label: affiliate.attributes.name }));\n                return options;\n            })\n            .catch(err => {\n                console.log('some error', err);\n            });\n    };\n\n    const handleChangeAffiliate = (event) => {\n        const value = event ? event.value : null\n        props.onChange(value, 'affiliate_id')\n    }\n\n    return (\n        <Col md={6}>\n            <FormGroup>\n                <Label for=\"exampleUrl\">Filiale</Label>\n                <AsyncSelect\n                    isClearable\n                    cacheOptions\n                    loadOptions={promiseAffilialeOptions}\n                    defaultOptions\n                    onChange={(event) => handleChangeAffiliate(event)}\n                />\n            </FormGroup>\n        </Col>\n    );\n};\n\nexport default Affiliate;\n","import Page from 'components/Page';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardBody, CardHeader, Col, Row, Table, Form, Button } from 'reactstrap';\n\n\nimport * as actions from '../store/actions/index';\nimport DateRange from '../components/Filter/DateRange'\nimport AffiliateFilter from '../components/Filter/Affiliate'\nimport NotificationSystem from 'react-notification-system';\nimport { NOTIFICATION_SYSTEM_STYLE } from 'utils/constants';\nimport RowNoData from '../components/RowNoData';\nimport formatDate from '../utils/formatDate'\nimport BasePage from './BasePage';\n\nlet date = new Date()\n\nclass CancelledSalePage extends BasePage {\n\n  state = {\n    filters: {\n      affiliate_number: null,\n      from: formatDate(new Date(date.getFullYear(), date.getMonth(), 1)),\n      to: formatDate(new Date()),\n    },\n    touched: false,\n  }\n\n  handleSubmit = () => {\n    const { searchClicked } = this.state\n    this.setState({\n      searchClicked: !searchClicked,\n      touched: true\n    })\n    this.props.onLoadStats(null, null, this.state.filters, ['affiliate'], null)\n  }\n\n  handleFilterChange = (value, name) => {\n    const { filters } = this.state\n    filters[name] = value\n    this.setState({\n      filters\n    })\n  }\n\n  render() {\n    let sumTotal = 0\n    let rows = <RowNoData colspan={7} />\n    const { touched } = this.state\n    const { stats, loading, error, affiliates } = this.props\n    if (loading === false && error === false && stats !== null && touched === true) {\n      rows = stats.map(doc => {\n        sumTotal += doc.attributes.import\n        return <tr>\n          <td>{affiliates[doc.attributes.affiliate_number].name}</td>\n          <td>{doc.attributes.cash_desk_number}</td>\n          <td>{doc.attributes.operator_code}</td>\n          <td>{doc.attributes.room}</td>\n          <td>{doc.attributes.table}</td>\n          <td>{doc.attributes.import}</td>\n          <td>{doc.attributes.date}</td>\n        </tr>\n      })\n    }\n    return (\n      <Page title=\"Documenti annullati\" breadcrumbs={[{ name: 'documenti annullati', active: true }]}>\n        <Row>\n          <Col>\n            <Card className=\"mb-3\">\n              <CardHeader>\n                Filtri\n              </CardHeader>\n              <CardBody>\n                <Form onSubmit={this.handleSubmit}>\n                  <DateRange onChange={this.handleFilterChange.bind(this)} fromStartDate={this.state.filters.from} toStartDate={this.state.filters.to} />\n                  <AffiliateFilter onChange={this.handleFilterChange.bind(this)} />\n                  <Row>\n                    <Col>\n                      <Button\n                        color=\"primary\"\n                        disabled={this.props.loading && this.state.searchClicked}\n                        onClick={this.handleSubmit}>\n                        Cerca\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form>\n              </CardBody>\n            </Card>\n            <Card className=\"mb-3\">\n              <CardBody>\n                <Table responsive>\n                  <thead>\n                    <tr>\n                      <th>Filiale</th>\n                      <th>Cassa</th>\n                      <th>Operatore</th>\n                      <th>Sala</th>\n                      <th>Tavolo</th>\n                      <th>Totale</th>\n                      <th>Data</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {rows}\n                  </tbody>\n                  <tfoot>\n                    <tr>\n                      <th colSpan=\"5\">TOTALE:</th>\n                      <td>{sumTotal.toFixed(2)}</td>\n                    </tr>\n                  </tfoot>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <NotificationSystem\n          dismissible={false}\n          ref={notificationSystem =>\n            (this.notificationSystem = notificationSystem)\n          }\n          style={NOTIFICATION_SYSTEM_STYLE}\n        />\n      </Page>\n    );\n  }\n}\n\nCancelledSalePage.contextTypes = {\n  store: PropTypes.object\n};\n\nCancelledSalePage.propTypes = {\n  notifications: PropTypes.array,\n  stats: PropTypes.array,\n  affiliates: PropTypes.object,\n  loading: PropTypes.bool,\n  error: PropTypes.bool,\n  pdfAvaiable: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n  return {\n    stats: state.statistics.cancelledSaleStatistics,\n    affiliates: state.statistics.affiliates,\n    loading: state.statistics.loading,\n    error: state.statistics.error,\n    pdfAvaiable: state.statistics.pdfAvaiable\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLoadStats: (page, perPage, filters, include, order) => dispatch(actions.loadCancelledSaleStat(page, perPage, filters, include, order)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CancelledSalePage);\n"],"sourceRoot":""}