{"version":3,"sources":["components/Page.js","components/Filter/DateRange.js","pages/BasePage.js","components/RowNoData.js","utils/formatDate.js","components/Filter/Customer.js","pages/CustomerNoPurchasePage.js"],"names":["bem","bn","create","Page","_ref","title","breadcrumbs","Tag","tag","className","children","restProps","Object","C_Users_Direcas_Documents_REACT_direcas_team_panel_direcas_cloud_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","type","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","defaultProps","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","DateRange","props","md","for","id","placeholder","defaultValue","fromStartDate","onChange","event","target","value","toStartDate","BasePage","isMobile","document","querySelector","classList","toggle","React","Component","RowNoData","colSpan","colspan","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","Customer","_useState","useState","_useState2","C_Users_Direcas_Documents_REACT_direcas_team_panel_direcas_cloud_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","groupId","setGroupId","react_select_async__WEBPACK_IMPORTED_MODULE_6__","isClearable","cacheOptions","loadOptions","inputValue","url","concat","api","get","then","response","data","group","label","attributes","description","catch","err","console","log","defaultOptions","handleChangeGroup","customer","business_name","CustomerNoPurchasePage","state","filters","customer_group_id","customer_id","from","to","handleSubmit","searchClicked","_this","setState","onLoadStats","handleFilterChange","handlePdfClick","queryString","createQueryString","fetch","responseType","fileName","window","URL","createObjectURL","Blob","link","href","setAttribute","body","appendChild","click","error","notificationSystem","addNotification","react__WEBPACK_IMPORTED_MODULE_6___default","react_icons_md__WEBPACK_IMPORTED_MODULE_23__","message","level","_this2","this","rows","_components_RowNoData__WEBPACK_IMPORTED_MODULE_24__","loading","stats","row","customers","relationships","purchased_at","react_number_format__WEBPACK_IMPORTED_MODULE_25__","spent_amount","displayType","thousandSeparator","decimalSeparator","decimalScale","fixedDecimalScale","renderText","components_Page__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","onSubmit","_components_Filter_DateRange__WEBPACK_IMPORTED_MODULE_17__","bind","_components_Filter_Customer__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","color","disabled","onClick","icon","pdfAvaiable","reactstrap__WEBPACK_IMPORTED_MODULE_15__","responsive","react_notification_system__WEBPACK_IMPORTED_MODULE_21___default","dismissible","ref","style","NOTIFICATION_SYSTEM_STYLE","connect","statistics","noPurchaseStatistics","dispatch","page","perPage","include","order","actions"],"mappings":"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","file":"static/js/17.f1a6cf9d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import React from 'react';\n\nimport { Col, Row, FormGroup, Label, Input } from 'reactstrap';\n\nconst DateRange = (props) => {\n    return (\n        <Row>\n            <Col md={6}>\n                <FormGroup>\n                    <Label for=\"from\">Da</Label>\n                    <Input\n                        type=\"date\"\n                        name=\"from\"\n                        id=\"from\"\n                        placeholder=\"Data inizio\"\n                        defaultValue={props.fromStartDate}\n                        onChange={(event) => props.onChange(event.target.value, 'from')}\n                    />\n                </FormGroup>\n            </Col>\n            <Col md={6}>\n                <FormGroup>\n                    <Label for=\"exampleDate\">A</Label>\n                    <Input\n                        type=\"date\"\n                        name=\"date\"\n                        id=\"to\"\n                        placeholder=\"Data Fine\"\n                        defaultValue={props.toStartDate}\n                        onChange={(event) => props.onChange(event.target.value, 'to')}\n                    />\n                </FormGroup>\n            </Col>\n        </Row>\n    );\n};\n\nexport default DateRange;\n","import React from 'react';\n\nimport { isMobile } from \"react-device-detect\";\n\nclass BasePage extends React.Component {\n\tcomponentDidMount() {\n\t\tif (isMobile) {\n\t\t\tdocument.querySelector('.cr-sidebar').classList.toggle('cr-sidebar--open');\n\t\t}\n\t}\n}\n\nexport default BasePage","import React from 'react';\n\nconst RowNoData = (props) => {\n    return (\n        <tr>\n            <td colSpan={props.colspan}>{props.children || \"Nessun dato presente\"}</td>\n        </tr>\n    );\n};\n\nexport default RowNoData;\n","export const formatDate = (date) => {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear()\n\n  if (month.length < 2)\n      month = '0' + month;\n  if (day.length < 2)\n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nexport default formatDate\n","import React, { useState } from 'react';\n\nimport { Col, Row, FormGroup, Label } from 'reactstrap';\nimport AsyncSelect from 'react-select/async';\n\nimport api from '../../api'\n\n\nconst Customer = (props) => {\n    const [groupId, setGroupId] = useState(\n        null\n    );\n\n    const promiseCustomerGroupOptions = inputValue => {\n        const url = `customer-groups${inputValue ? '?filter[text]=' + inputValue : ''}`\n        return api.get(url)\n            .then(response => {\n                const options = response.data.data.map(group => ({ value: group.id, label: group.attributes.description }));\n                return options;\n            })\n            .catch(err => {\n                console.log('some error', err);\n            });\n    };\n\n    const promiseCustomerOptions = inputValue => {\n        const url = `customers${inputValue ? '?filter[text]=' + inputValue : ''}${groupId ? '&filter[group_id]=' + groupId : ''}`\n        return api.get(url)\n            .then(response => {\n                const options = response.data.data.map(customer => ({ value: customer.id, label: customer.attributes.business_name }));\n                return options;\n            })\n            .catch(err => {\n                console.log('some error', err);\n            });\n    };\n\n    const handleChangeGroup = (event) => {\n        const value = event ? event.value : null\n        props.onChange(value, 'customer_group_id')\n        setGroupId(value)\n    }\n    return (\n        <Row>\n            <Col md={6}>\n                <FormGroup>\n                    <Label for=\"exampleUrl\">Gruppo Cliente</Label>\n                    <AsyncSelect\n                        isClearable\n                        cacheOptions\n                        loadOptions={promiseCustomerGroupOptions}\n                        defaultOptions\n                        onChange={(event) => handleChangeGroup(event)}\n                    />\n                </FormGroup>\n            </Col>\n            <Col md={6}>\n                <FormGroup>\n                    <Label for=\"exampleUrl\">Cliente</Label>\n                    <AsyncSelect\n                        isClearable\n                        loadOptions={promiseCustomerOptions}\n                        defaultOptions\n                        onChange={(event) => props.onChange(event.value, 'customer_id')}\n                    />\n                </FormGroup>\n            </Col>\n        </Row>\n    );\n};\n\nexport default Customer;\n","import Page from 'components/Page';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardBody, CardHeader, Col, Row, Table, Form, Button } from 'reactstrap';\n\nimport * as actions from '../store/actions/index';\nimport DateRange from '../components/Filter/DateRange'\nimport CustomerFilter from '../components/Filter/Customer'\nimport api from '../api'\nimport { createQueryString } from '../utils/queryString';\nimport NotificationSystem from 'react-notification-system';\nimport { NOTIFICATION_SYSTEM_STYLE } from 'utils/constants';\nimport {\n    MdError\n} from 'react-icons/md';\nimport RowNoData from '../components/RowNoData';\nimport NumberFormat from 'react-number-format';\nimport formatDate from '../utils/formatDate'\nimport BasePage from './BasePage';\n\nlet date = new Date()\n\n\nclass CustomerNoPurchasePage extends BasePage {\n\n    state = {\n        filters: {\n            customer_group_id: null,\n            customer_id: null,\n            from: formatDate(new Date(date.getFullYear(), date.getMonth(), 1)),\n            to: formatDate(new Date()),\n        }\n    }\n\n    handleSubmit = () => {\n        const { searchClicked } = this.state\n        this.setState({\n            searchClicked: !searchClicked\n        })\n        this.props.onLoadStats(null, null, this.state.filters, ['customer'], null)\n    }\n\n    handleFilterChange = (value, name) => {\n        const { filters } = this.state\n        filters[name] = value\n        this.setState({\n            filters\n        })\n    }\n\n    handlePdfClick = () => {\n        const queryString = createQueryString(null, null, this.state.filters, ['customer'], null);\n        api.get(`customer-last-purchases/pdf${queryString}`)\n            .then(response => {\n                fetch(response.data, {\n                    responseType: 'blob'\n                }).then(response => {\n                    const fileName = `no_acquisti_${this.state.filters.from}_${this.state.filters.to}.pdf`\n                    const url = window.URL.createObjectURL(new Blob([response.data]));\n                    const link = document.createElement('a');\n                    link.href = url;\n                    link.setAttribute('download', fileName);\n                    document.body.appendChild(link);\n                    link.click();\n                })\n            })\n            .catch(error => {\n                if (!this.notificationSystem) {\n                    return;\n                }\n\n                this.notificationSystem.addNotification({\n                    title: <MdError />,\n                    message: 'Errore nello scaricamento',\n                    level: 'error',\n                });\n            });\n    }\n\n    render() {\n        let rows = <RowNoData colspan={5} />\n        if (this.props.loading === false && this.props.error === false && this.props.stats !== null) {\n            rows = this.props.stats.map((row, index) => {\n                return <tr key={index}>\n                    <td className=\"text-left\">{this.props.customers[row.relationships.customer.data.id].business_name}</td>\n                    <td className=\"text-right\">{row.attributes.purchased_at}</td>\n                    <td className=\"text-right\"><NumberFormat value={row.attributes.spent_amount} displayType={'text'} thousandSeparator={'.'} decimalSeparator={','} decimalScale={2} fixedDecimalScale={true} renderText={value => <div>{value}</div>} /></td>\n                </tr>\n            })\n        }\n        return (\n            <Page title=\"Punti clienti\" breadcrumbs={[{ name: 'punti clienti', active: true }]}>\n                <Row>\n                    <Col>\n                        <Card className=\"mb-3\">\n                            <CardHeader>\n                                Filtri\n                            </CardHeader>\n                            <CardBody>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <DateRange onChange={this.handleFilterChange.bind(this)} fromStartDate={this.state.filters.from}  toStartDate={this.state.filters.to}/>\n                                    <CustomerFilter onChange={this.handleFilterChange.bind(this)} />\n                                    <Row>\n                                        <Col>\n                                            <Button\n                                                color=\"primary\"\n                                                disabled={this.props.loading && this.state.searchClicked}\n                                                onClick={this.handleSubmit}>\n                                                Cerca\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                        <Card className=\"mb-3\">\n                            <CardHeader>\n                                <Button\n                                    className=\"float-right\"\n                                    color=\"secondary\"\n                                    icon=\"pdf\"\n                                    onClick={this.handlePdfClick}\n                                    disabled={!this.props.pdfAvaiable}>\n                                    PDF\n                                </Button>\n                            </CardHeader>\n                            <CardBody>\n                                <Table responsive>\n                                    <thead>\n                                        <tr>\n                                            <th className=\"text-left\">Cliente</th>\n                                            <th className=\"text-right\">Data ultimo acquisto</th>\n                                            <th className=\"text-right\">Valore speso ultimo acquisto</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {rows}\n                                    </tbody>\n                                </Table>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <NotificationSystem\n                    dismissible={false}\n                    ref={notificationSystem =>\n                        (this.notificationSystem = notificationSystem)\n                    }\n                    style={NOTIFICATION_SYSTEM_STYLE}\n                />\n            </Page>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        stats: state.statistics.noPurchaseStatistics,\n        customers: state.statistics.customers,\n        loading: state.statistics.loading,\n        error: state.statistics.error,\n        pdfAvaiable: state.statistics.pdfAvaiable\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLoadStats: (page, perPage, filters, include, order) => dispatch(actions.loadNoPurchaseStatCustomers(page, perPage, filters, include, order)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerNoPurchasePage);\n"],"sourceRoot":""}