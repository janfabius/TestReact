{"version":3,"sources":["components/Page.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/reactstrap/es/FormFeedback.js","components/Form/ChangePassword.js","pages/ProfilePage.js"],"names":["bem","bn","create","Page","_ref","title","breadcrumbs","Tag","tag","className","children","restProps","Object","C_Users_Direcas_Documents_REACT_direcas_team_panel_direcas_cloud_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","type","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","defaultProps","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","listTag","string","listClassName","cssModule","object","node","aria-label","Breadcrumb","props","ListTag","label","attributes","listClasses","__webpack_exports__","bool","BreadcrumbItem","aria-current","undefined","prop_types_default","utils","valid","tooltip","FormFeedback_FormFeedback","objectWithoutPropertiesLoose","validMode","classnames_default","react_default","esm_extends","es_FormFeedback","ChangePassword","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","_this$state","state","password","newPassword","confirmPassword","onSubmit","value","handleInputChange","input","target","touched","feedback","setState","defineProperty","validateInput","_this$state2","formValid","_this$props","passwordLabel","passwordInputProps","newPasswordLabel","newPasswordInputProps","confirmPasswordLabel","confirmPasswordInputProps","Form","FormGroup","Label","for","Input","onChange","bind","invalid","Button","size","color","disabled","loading","onClick","React","Component","placeholder","connect","auth","error","isAuthenticated","token","authRedirectPath","dispatch","onAuth","email","actions","onSetAuthRedirectPath","ProfilePage","Card","CardHeader","CardBody","Form_ChangePassword","onPasswordChange","changingPassword","changingPasswordError","success","changingPasswordSuccess","notifications_default","dismissible","notifications","style","NOTIFICATION_SYSTEM_STYLE","contextTypes","store","PropTypes","changePassword","passwordConfirm"],"mappings":"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","file":"static/js/22.e0a8c7a8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  valid: PropTypes.bool,\n  tooltip: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div',\n  valid: undefined\n};\n\nvar FormFeedback = function FormFeedback(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      valid = props.valid,\n      tooltip = props.tooltip,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"valid\", \"tooltip\", \"tag\"]);\n\n  var validMode = tooltip ? 'tooltip' : 'feedback';\n  var classes = mapToCssModules(classNames(className, valid ? \"valid-\" + validMode : \"invalid-\" + validMode), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormFeedback.propTypes = propTypes;\nFormFeedback.defaultProps = defaultProps;\nexport default FormFeedback;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, FormGroup, Input, Label, FormFeedback } from 'reactstrap';\n\nimport * as actions from '../../store/actions/index';\n\nclass ChangePassword extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            password: {\n                valid: true,\n                value: \"\",\n                touched: false,\n                feedback: '',\n            },\n            newPassword: {\n                valid: true,\n                value: \"\",\n                touched: false,\n                feedback: '',\n            },\n            confirmPassword: {\n                valid: true,\n                value: \"\",\n                touched: false,\n                feedback: '',\n            },\n            formValid: false\n        }\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { password, newPassword, confirmPassword } = this.state\n        this.props.onSubmit(password.value, newPassword.value, confirmPassword.value)\n    };\n\n    handleInputChange = (name, e) => {\n        const input = this.state[name]\n        input.value = e.target.value\n        input.touched = true\n        input.valid = true\n        input.feedback = ''\n        this.setState({\n            [name]: input\n        })\n        this.validateInput()\n    }\n\n    validateInput = () => {\n        let { password, newPassword, confirmPassword, formValid } = this.state\n        formValid = true\n        newPassword.valid = true\n        confirmPassword.valid = true\n        password.valid = true\n        newPassword.feedback = ''\n        confirmPassword.feedback = ''\n        if (password.touched && password.value === \"\") {\n            password.feedback = \"Inserire la vecchia password\"\n            password.valid = false\n        }\n        if (newPassword.touched && (newPassword.value === \"\" || newPassword.value.length < 6)) {\n            newPassword.feedback = \"La password deve essere di almeno 6 caratteri\"\n            newPassword.valid = false\n        }\n        if (newPassword.touched && password.touched && password.value === newPassword.value) {\n            newPassword.feedback = \"La nuova password deve essere diversa dalla vecchia\"\n            newPassword.valid = false\n        }\n        if (newPassword.touched && confirmPassword.touched && newPassword.value !== confirmPassword.value) {\n            confirmPassword.feedback = \"Le password non coincidono\"\n            newPassword.valid = false\n            confirmPassword.valid = false\n        }\n        formValid = password.valid && newPassword.valid && confirmPassword.valid;\n        this.setState({\n            password,\n            newPassword,\n            confirmPassword,\n            formValid\n        })\n    }\n\n    render() {\n        const {\n            passwordLabel,\n            passwordInputProps,\n            newPasswordLabel,\n            newPasswordInputProps,\n            confirmPasswordLabel,\n            confirmPasswordInputProps,\n            children,\n        } = this.props;\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <FormGroup>\n                    <Label for={passwordLabel}>{passwordLabel}</Label>\n                    <Input {...passwordInputProps}\n                        value={this.state.password.value}\n                        onChange={this.handleInputChange.bind(this, 'password')}\n                        valid={this.state.password.valid && this.state.password.touched}\n                        invalid={!this.state.password.valid && this.state.password.touched} />\n                    <FormFeedback>{this.state.password.feedback}</FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                    <Label for={newPasswordLabel}>{newPasswordLabel}</Label>\n                    <Input {...newPasswordInputProps}\n                        value={this.state.newPassword.value}\n                        onChange={this.handleInputChange.bind(this, 'newPassword')}\n                        valid={this.state.newPassword.valid && this.state.newPassword.touched}\n                        invalid={!this.state.newPassword.valid && this.state.newPassword.touched} />\n                    <FormFeedback>{this.state.newPassword.feedback}</FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                    <Label for={confirmPasswordLabel}>{confirmPasswordLabel}</Label>\n                    <Input {...confirmPasswordInputProps}\n                        value={this.state.confirmPassword.value}\n                        onChange={this.handleInputChange.bind(this, 'confirmPassword')}\n                        valid={this.state.confirmPassword.valid && this.state.confirmPassword.touched}\n                        invalid={!this.state.confirmPassword.valid && this.state.confirmPassword.touched} />\n                    <FormFeedback>{this.state.confirmPassword.feedback}</FormFeedback>\n                </FormGroup>\n                <hr />\n                <Button\n                    size=\"lg\"\n                    color=\"primary\"\n                    disabled={!this.state.formValid || this.props.loading}\n                    onClick={this.handleSubmit}>\n                    Salva\n                </Button>\n\n                {children}\n            </Form>\n        );\n    }\n}\n\nChangePassword.propTypes = {\n    passwordLabel: PropTypes.string,\n    passwordInputProps: PropTypes.object,\n    newPasswordLabel: PropTypes.string,\n    newPasswordInputProps: PropTypes.object,\n    confirmPasswordLabel: PropTypes.string,\n    confirmPasswordInputProps: PropTypes.object,\n};\n\nChangePassword.defaultProps = {\n    passwordLabel: 'Password attuale',\n    passwordInputProps: {\n        type: 'password',\n        placeholder: 'la tua password',\n    },\n    newPasswordLabel: 'Nuova password',\n    newPasswordInputProps: {\n        type: 'password',\n        placeholder: 'nuova password',\n    },\n    confirmPasswordLabel: 'Conferma nuova Password',\n    confirmPasswordInputProps: {\n        type: 'password',\n        placeholder: 'ripeti la password',\n    },\n};\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        authRedirectPath: state.auth.authRedirectPath\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password) => dispatch(actions.auth(email, password)),\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../store/actions/index';\nimport Page from 'components/Page';\nimport ChangePasswordForm from 'components/Form/ChangePassword';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\n\nimport NotificationSystem from 'react-notification-system-redux';\nimport { NOTIFICATION_SYSTEM_STYLE } from 'utils/constants';\n\nclass ProfilePage extends Component {\n    render() {\n        return (\n            <Page title=\"Profilo\" breadcrumbs={[{ name: 'profilo', active: true }]}>\n                <Card>\n                    <CardHeader>\n                        Cambio password\n                    </CardHeader>\n                    <CardBody>\n                        <ChangePasswordForm\n                            onSubmit={this.props.onPasswordChange}\n                            loading={this.props.changingPassword}\n                            error={this.props.changingPasswordError}\n                            success={this.props.changingPasswordSuccess}/>\n                    </CardBody>\n                </Card>\n                <NotificationSystem\n                    dismissible={false}\n                    notifications={this.props.notifications}\n                    style={NOTIFICATION_SYSTEM_STYLE}\n                />\n            </Page>\n        )\n    }\n}\n\nProfilePage.contextTypes = {\n    store: PropTypes.object\n};\n\nProfilePage.propTypes = {\n    notifications: PropTypes.array,\n    changingPassword: PropTypes.bool,\n    changingPasswordError: PropTypes.bool,\n    changingPasswordSuccess: PropTypes.bool,\n};\n\nconst mapStateToProps = state => {\n    return {\n        changingPassword: state.auth.changePassword,\n        changingPasswordError: state.auth.changingPasswordError,\n        changingPasswordSuccess: state.auth.changingPasswordSuccess,\n        notifications: state.notifications,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPasswordChange: (password, newPassword, passwordConfirm) => dispatch(actions.changePassword(password, newPassword, passwordConfirm)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);"],"sourceRoot":""}